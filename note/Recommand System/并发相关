
HashMap在并发修改的时候，可能是导致循环链表的构成，
就用ConcurrentHashMap，正如他的名字一样，他是一个线程安全的HashMap，这样能轻松解决问题。
参考：https://blog.csdn.net/u013905744/article/details/50651767

ExecutorService的execute和submit方法
三个区别：
1、接收的参数不一样
2、submit有返回值，而execute没有
   用到返回值的例子，比如说我有很多个做validation的task，我希望所有的task执行完，
然后每个task告诉我它的执行结果，是成功还是失败，如果是失败，原因是什么。然后我就可以把所有失败的原因综合起来发给调用者。
3、submit方便Exception处理
   意思就是如果你在你的task里会抛出checked或者unchecked exception，而你又希望外面的调用者能够感知这些exception并做出及时的处理，
那么就需要用到submit，通过捕获Future.get抛出的异常。
https://blog.csdn.net/peachpi/article/details/6771946
https://blog.csdn.net/ryantotti/article/details/6956175

并行与多线程的区别
   多线程是实现并行的一种最常见的手段。如果线程之间的任务是相互独立的，就可将其执行过程视为并行的。
   可以使用Executor将串行循环转化为并行循环。


一个CPU的电脑上一次只能执行一个线程。
线程的五种状态：创建、销毁、可运行、运行、等待/阻塞/睡眠。
yield()的作用是使线程让步，将线程从运行状态转到可运行状态，使相同优先级的线程有机会执行，但有可能没有效果。
join()使线程加入到另一个线程的尾部，保证当前线程停止执行，直到该线程所加入的线程完成为止。
synchronized定义同步方法或代码块，一个对象只有一个锁，同步会损害并发性。
线程交互用到的方法有wait(),notify(),notifyAll()。
优先级高的线程获取CPU资源的概率较大，数值越大优先级越高，范围1-10，默认优先级为5。
